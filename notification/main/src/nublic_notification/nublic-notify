#!/usr/bin/python
'''
Created on 10/08/2010

It sends a notification via the Nublic Notification System
@copyright: 2011 Nublic
@author: David Navarro Estruch
'''

import sys
import logging
logging.basicConfig(stream=sys.stderr)
#logging.getLogger('sqlalchemy.engine').setLevel(logging.DEBUG) # TODO DEACTIVATE
logging.getLogger('sqlalchemy.engine').setLevel(logging.CRITICAL) # TODO ACTIVATE

from optparse import OptionParser

# from nublic_notification.dbus_client import Notification
from nublic.notification import *


def main():
    usage = "sends a message to the Nublic notification system"
    parser = OptionParser(usage)

    parser.add_option("-u", "--user", action="store", type="string")
    parser.add_option("-a", "--action", action="append", nargs=3, type="string") 
    parser.add_option("-s", "--stock", action="append", nargs=2, type="string")
    (options, args) = parser.parse_args()
    
    if len(args) != 3:
        parser.error('Invalid number of parameters. For example nublic-notify appCommandLine" Some thing happened" notice')
    else:
        app = args[0]
        text = args[1]
        level = args[2]
        if options.user != None:
            user = option.user
        else:
            user = ""

        # Actions are not implemented yet
        actions = []
        if options.action:
            for a in options.action:
                actions.append(a[0], a[1])
        
        # Stocks are not implemented yet
        stocks = []
        if options.stock:
            for s in options.stock:
                stocks.append(s[0], s[1])

        return send_notification(app, user, level, text)
        
if __name__ == '__main__':
    main()
