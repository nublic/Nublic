#!/usr/bin/python

# Runs in the foreground. It is suited for use with the Upstart manager

# Initial version from:
#   http://www.python.org/dev/peps/pep-3143/ from Public Domain
# Second version from: https://gist.github.com/339430
#
# @author: David Navarro Estruch
# @author: Alejandro Serrano Mena
# @copyright: 2011 Nublic


from nublic_file_watcher.central_queue import CentralQueue
from nublic_file_watcher.preview_processor import Element
from nublic.filewatcher import Processor, init_socket_watcher
from nublic_file_watcher.music_processor import MusicProcessor
from nublic_file_watcher.photo_processor import PhotoProcessor

from time import sleep
import logging
import sys

logging.basicConfig(
    level=logging.DEBUG, filename="/var/log/nublic-file-watcher.log")
log = logging.getLogger("nublic-file-watcher-daemon")

#from nublic_file_watcher.preview_processor import trace_calls


#sys.settrace(trace_calls)


class MainProcessor(Processor):
    def __init__(self):
        Processor.__init__(self, "previewer")
        self.central_queue = CentralQueue.start(
            #[MusicProcessor, PhotoProcessor])
            #    [PhotoProcessor])
            [MusicProcessor])
        #self.central_queue = CentralQueue.start([])

    def process(self, change):
        self.central_queue.tell({'id': '_watcher', 'element': Element(change)})
        log.debug("Change received %s", repr(change))


if __name__ == '__main__':
    init_socket_watcher("previewer", [MainProcessor.start()])
    try:
        while True:
            sleep(1)
    except KeyboardInterrupt as e:
        sys.exit(1)
        raise e
    except BaseException as e:
        log.exception("Exception raised: %s" % repr(e))
        raise e
    log.info("Resource daemon shutdown")
