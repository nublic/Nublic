#!/bin/bash

export INITIAL_DIR=`pwd`
export DEBFULLNAME='Nublic Packaging Team'
export DEBEMAIL='packaging@nublic.com'

initialize() {
    sudo apt-get install libdbus-java maven2 reprepro
    mvn install:install-file \
        -Dfile=/usr/share/java/dbus.jar \
        -DgroupId=org.freedesktop \
        -DartifactId=dbus \
        -Dversion=2.8.1 \
        -Dpackaging=jar
    mkdir target
}

package_and_install() {
    echo
    echo "PACKAGING AND INSTALLING IN MAVEN " $1
    cd $1
    mvn install
    cd ${INITIAL_DIR}
}

build_deb_package() {
    echo
    echo "BUILDING .DEB FOR " $1
    cd $1
    debuild -i -us -uc -b
    debuild clean
    cd ..
    mv *.deb *.build *.changes ${INITIAL_DIR}/target
    cd ${INITIAL_DIR}
}

build_submodule_lib() {
    echo
    echo "BUILDING EXTERNAL LIBRARY " $1
    cd libs
    mkdir $1/debian
    cp -R $1-debian/* $1/debian
    cd $1
    debuild -i -us -uc -b
    debuild clean
    cd ..
    mv *.deb *.build *.changes ${INITIAL_DIR}/target
    cd ${INITIAL_DIR}
}

create_repo() {
    echo
    echo "CREATING REPOSITORY"
    mkdir -p target/repo/conf
    mkdir -p target/repo/incoming
    cp repo/conf/distributions target/repo/conf
    cd target
    for pkg in *.changes
    do
        reprepro -Vb repo include nublic $pkg
    done
    cd ${INITIAL_DIR}
}

initialize
build_submodule_lib sunburnt
build_deb_package notification/main/src
package_and_install notification/java
build_deb_package filewatcher/main/src
package_and_install filewatcher/scala
#build_deb_package resource/main/src
#package_and_install resource/java
build_deb_package apps/app.browser/server
build_deb_package apps/app.browser/web
build_deb_package apps/app.browser
build_deb_package conf/solr
create_repo

